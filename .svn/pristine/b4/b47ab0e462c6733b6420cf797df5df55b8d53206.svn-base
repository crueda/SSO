var express = require('express');
var router = express.Router();
//var AreaModel = require('../models/areas');



/* Mostramos el formualario para crear usuarios nuevos */
/*
router.get('/', function(req, res)
{
  res.render('index', { title: 'Servicio rest con nodejs, express 4 y mysql'});
});
*/

/*
router.post("/area", function(req,res)
{
    //creamos un objeto con los datos a insertar del area
    var areaData = {
        id : null,
        description : req.body.description,
        initDate : req.body.initDate,
        endDate : req.body.endDate,
        initHour : req.body.initHour,
        endHour : req.body.endHour,
        typeArea : req.body.typeArea,
        radius : req.body.radius,
        username : 'sumoAPI'
    };
    AreaModel.insertArea(areaData,function(error, data)
    {
        //si el usuario se ha insertado correctamente mostramos su info
        if(data && data.insertId)
        {
            res.redirect("/area/" + data.insertId);
        }
        else
        {
            res.json(500,{"msg":"Error"});
        }
    });
});


router.put('/area/', function(req, res)
{
    //almacenamos los datos del formulario en un objeto
    var areaData = {id:req.param('id'),description:req.param('description'),typeArea:req.param('typeArea')};
    AreaModel.updateArea(areaData,function(error, data)
    {
        //si el area se ha actualizado correctamente mostramos un mensaje
        if(data && data.msg)
        {
            res.json(200,{"msg":"Area " + req.param('id') + "updated"})
        }
        else
        {
            res.json(500,{"msg":"Error"});
        }
    });
});


router.get('/area/:id', function(req, res)
{
    var id = req.params.id;
    //solo actualizamos si la id es un número
    if(!isNaN(id))
    {
        AreaModel.getArea(id,function(error, data)
        {
            //si existe el area enviamos el json
            if (typeof data !== 'undefined' && data.length > 0)
            {
                res.json(200,{"msg":data})
            }
            //en otro caso mostramos un error
            else
            {
                res.json(404,{"msg":"notExist"});
            }
        });
    }
    //si la id no es numerica mostramos un error de servidor
    else
    {
        res.json(500,{"msg":"The id must be numeric"});
    }
});


router.post('/area/:id', function(req, res)
{
    var id = req.params.id;
    //solo actualizamos si la id es un número
    if(!isNaN(id))
    {
        AreaModel.getArea(id,function(error, data)
        {
            //si existe el area enviamos el json
            if (typeof data !== 'undefined' && data.length > 0)
            {
                res.json(200,{"msg":data})
            }
            //en otro caso mostramos un error
            else
            {
                res.json(404,{"msg":"notExist"});
            }
        });
    }
    //si la id no es numerica mostramos un error de servidor
    else
    {
        res.json(500,{"msg":"The id must be numeric"});
    }
});

*/


router.post('/*', function(req, res)
{
  console.log("en post de sso: " + req.originalUrl);
  console.log("en post de sso: " + req.route);
  console.log("en post de sso: " + req.secure);
  console.log("en post de sso: " + req.query);
  console.log("en post de sso: " + req.protocol);

  //console.log("en post de sso: " + res.method);
  //console.log("en post de sso: " + res.headers.x-key);
  res.redirect(307, "http://localhost:3001"+ req.originalUrl);



});


/*
router.post('/areas/', function(req, res)
{
    AreaModel.getAreas(function(error, data)
    {
        //si existe el area, enviamos el json
        if (typeof data !== 'undefined')
        {
            res.json(200,{"results":data})
        }
        //en otro caso mostramos un error
        else
        {
            res.json(404,{"msg":"notExist"});
        }
    });
});


router.delete("/area/", function(req, res)
{
    //id del area a eliminar
    var id = req.param('id');
    AreaModel.deleteArea(id,function(error, data)
    {
        if(data && data.msg === "deleted" || data.msg === "notExist")
        {
            res.redirect("/areas/");
        }
        else
        {
            res.json(500,{"msg":"Error"});
        }
    });
})
*/
module.exports = router;
